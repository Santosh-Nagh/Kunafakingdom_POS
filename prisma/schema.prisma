generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model batch_runs {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id    String?   @db.Uuid
  product_id   String?   @db.Uuid
  qty_produced Decimal   @db.Decimal
  wastage_qty  Decimal   @default(0) @db.Decimal
  run_ts       DateTime  @default(now()) @db.Timestamptz(6)
  branches     branches? @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products     products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model boms {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id      String?        @db.Uuid
  raw_material_id String?        @db.Uuid
  qty_per_unit    Decimal        @db.Decimal
  products        products?      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  raw_materials   raw_materials? @relation(fields: [raw_material_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model branches {
  id         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String
  address    String
  contact    String
  gstin      String
  timezone   String       @default("Asia/Kolkata")
  batch_runs batch_runs[]
  expenses   expenses[]
  inventory  inventory[]
  orders     orders[]
  products   products[]
  branch_charges branch_charges[]
}

model categories {
  id       String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name     String     @unique
  products products[]
}

model coupons {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  code          String          @unique
  type          String
  value         Decimal         @db.Decimal
  max_uses      Int?            @default(1)
  expires_at    DateTime?       @db.Timestamptz(6)
  order_coupons order_coupons[]
}

model expenses {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id   String?   @db.Uuid
  category    String?
  amount      Decimal   @db.Decimal
  date        DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  description String?
  branches    branches? @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inventory {
  id               String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id        String?   @db.Uuid
  item_type        String
  item_id          String    @db.Uuid
  stock_qty        Decimal   @default(0) @db.Decimal
  last_adjusted_at DateTime  @default(now()) @db.Timestamptz(6)
  branches         branches? @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order_items {
  id                   String                 @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id             String?                @db.Uuid
  product_id           String?                @db.Uuid
  quantity             Decimal                @db.Decimal
  unit_price           Decimal                @db.Decimal
  discount_amt         Decimal                @default(0) @db.Decimal
  updated_at           DateTime?              @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  order_item_modifiers order_item_modifiers[]
  orders               orders?                @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products             products?              @relation(fields: [product_id], references: [id], onUpdate: NoAction)
}

model orders {
  id             String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id      String?         @db.Uuid
  source         String          @default("in_store")
  customer_name  String?
  customer_phone String?
  aggregator_id  String?
  created_at     DateTime        @default(now()) @db.Timestamptz(6)
  status         String          @default("completed")
  customer_id    String?         @db.Uuid
  updated_at     DateTime?       @db.Timestamptz(6)
  deleted_at     DateTime?       @db.Timestamptz(6)
  order_charges  order_charges[]
  order_coupons  order_coupons[]
  order_events   order_events[]
  order_items    order_items[]
  order_taxes    order_taxes[]
  branches       branches?       @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  customers      customers?      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments       payments[]
  transactions   transactions[]
  order_notes    String?

}

model payments {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id        String?        @db.Uuid
  method          String
  amount          Decimal        @db.Decimal
  status          String         @default("paid")
  paid_at         DateTime?      @db.Timestamptz(6)
  cash_given      Decimal?
  change_given    Decimal?       
  gateway_txn_id  String?
  refunded_amount Decimal?       @default(0) @db.Decimal
  updated_at      DateTime?      @db.Timestamptz(6)
  deleted_at      DateTime?      @db.Timestamptz(6)
  orders          orders?        @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transactions    transactions[]
}

model products {
  id            String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id     String?       @db.Uuid
  category_id   String?       @db.Uuid
  name          String
  unit_price    Decimal       @db.Decimal
  unit          String        @default("pcs")
  made_to_order Boolean       @default(true)
  is_active     Boolean       @default(true)
  batch_runs    batch_runs[]
  boms          boms[]
  order_items   order_items[]
  branches      branches?     @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categories    categories?   @relation(fields: [category_id], references: [id], onUpdate: NoAction)
}

model raw_materials {
  id            String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String
  unit          String
  reorder_point Decimal @default(0) @db.Decimal
  boms          boms[]
}

model transactions {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id    String?   @db.Uuid
  payment_id  String?   @db.Uuid
  amount      Decimal   @db.Decimal
  category    String?
  type        String?
  status      String    @default("completed")
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  user_uid    String?   @db.Uuid
  description String?
  orders      orders?   @relation(fields: [order_id], references: [id], onUpdate: NoAction)
  payments    payments? @relation(fields: [payment_id], references: [id], onUpdate: NoAction)
  users       users?    @relation(fields: [user_uid], references: [id], onUpdate: NoAction)
}

model users {
  id            String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name          String
  email         String?        @unique
  password_hash String?
  role          String         @default("admin")
  created_at    DateTime       @default(now()) @db.Timestamp(6)
  pin_code      String?        @db.VarChar(6)
  order_events  order_events[]
  transactions  transactions[]
}

model customers {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String?
  phone      String?  @unique
  email      String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  orders     orders[]
}

model order_charges {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String?  @db.Uuid
  type       String
  amount     Decimal  @default(0) @db.Decimal
  created_at DateTime @default(now()) @db.Timestamptz(6)
  orders     orders?  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order_taxes {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String?  @db.Uuid
  type       String
  percent    Decimal? @db.Decimal
  amount     Decimal  @default(0) @db.Decimal
  created_at DateTime @default(now()) @db.Timestamptz(6)
  orders     orders?  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order_coupons {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String?  @db.Uuid
  coupon_id  String?  @db.Uuid
  code       String?
  value      Decimal  @default(0) @db.Decimal
  created_at DateTime @default(now()) @db.Timestamptz(6)
  coupons    coupons? @relation(fields: [coupon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orders     orders?  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order_events {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id   String?  @db.Uuid
  user_id    String?  @db.Uuid
  event_type String
  details    String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  orders     orders?  @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users?   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order_item_modifiers {
  id            String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_item_id String?      @db.Uuid
  name          String
  value         String?
  created_at    DateTime     @default(now()) @db.Timestamptz(6)
  order_items   order_items? @relation(fields: [order_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model branch_charges {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branch_id   String   @db.Uuid
  type        String   // 'delivery', 'packaging', 'service', etc.
  amount      Decimal  @db.Decimal
  is_active   Boolean  @default(true)
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
  branches    branches @relation(fields: [branch_id], references: [id], onDelete: Cascade)
}


